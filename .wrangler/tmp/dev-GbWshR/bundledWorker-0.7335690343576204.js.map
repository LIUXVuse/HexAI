{
  "version": 3,
  "sources": ["../../../_worker.js", "../pages-Bw2X71/C:/Users/PONY/AppData/Roaming/npm/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../pages-Bw2X71/C:/Users/PONY/AppData/Roaming/npm/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-IyuSD6/middleware-insertion-facade.js", "../pages-Bw2X71/C:/Users/PONY/AppData/Roaming/npm/node_modules/wrangler/templates/middleware/common.ts", "../bundle-IyuSD6/middleware-loader.entry.ts", "C:/Users/PONY/AppData/Roaming/npm/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "C:/Users/PONY/AppData/Roaming/npm/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-fNr1VJ/middleware-insertion-facade.js", "C:/Users/PONY/AppData/Roaming/npm/node_modules/wrangler/templates/middleware/common.ts", "../bundle-fNr1VJ/middleware-loader.entry.ts"],
  "sourceRoot": "E:\\projects\\\u97FB\u6148\\.wrangler\\tmp\\dev-GbWshR",
  "sourcesContent": ["// _worker.js - Modified for Bazi Analysis using Deepseek API\r\n\r\n// Helper function to format response for frontend (Simplified)\r\nfunction formatResponse(content, role = \"assistant\", finish_reason = \"stop\") {\r\n  const finalContent = typeof content === 'string' ? content : '(\u65E0\u6548\u7684\u56DE\u61C9\u5185\u5BB9)';\r\n  return {\r\n    choices: [\r\n      {\r\n        message: { role, content: finalContent },\r\n        finish_reason,\r\n      },\r\n    ],\r\n  };\r\n}\r\n\r\n// --- Deepseek Interaction --- (No changes needed in the function itself initially)\r\nasync function callDeepseek(apiKey, messages) {\r\n    const DEEPSEEK_API_URL = \"https://api.deepseek.com/chat/completions\";\r\n    console.log(\"[Worker Deepseek] Calling Deepseek API...\");\r\n\r\n    // The system prompt is now part of the 'messages' passed in\r\n    console.log(\"[Worker Deepseek DEBUG] Messages being sent (including system prompt):\", JSON.stringify(messages, null, 2));\r\n\r\n    const payload = {\r\n        model: \"deepseek-chat\", // Use the desired Deepseek model\r\n        messages: messages,\r\n        stream: false // Keep non-streaming for this use case for simplicity\r\n    };\r\n\r\n    const response = await fetch(DEEPSEEK_API_URL, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${apiKey}`\r\n        },\r\n        body: JSON.stringify(payload)\r\n    });\r\n\r\n    console.log(`[Worker Deepseek] Received response status from Deepseek: ${response.status}`);\r\n\r\n    if (!response.ok) {\r\n        let errorBody = \"(Failed to read Deepseek error body)\";\r\n        try { errorBody = await response.text(); } catch (e) { /* ignore */ }\r\n        console.error(`[Worker Deepseek] Deepseek API Error: ${response.status}. Body: ${errorBody}`);\r\n        // Throw an error with a user-friendly message if possible\r\n        let userError = `Deepseek API \u8ACB\u6C42\u5931\u6557 (\u72C0\u614B\u78BC: ${response.status})\u3002`;\r\n        if (errorBody.includes(\"insufficient_quota\")) {\r\n            userError = \"Deepseek API \u984D\u5EA6\u4E0D\u8DB3\uFF0C\u8ACB\u6AA2\u67E5\u60A8\u7684\u5E33\u6236\u3002\";\r\n        }\r\n        throw new Error(userError);\r\n    }\r\n\r\n    const result = await response.json();\r\n    console.log(\"[Worker Deepseek DEBUG] Parsed Deepseek JSON result:\", JSON.stringify(result).substring(0, 500) + '...');\r\n\r\n    // Extract the actual response content\r\n     if (result.choices && result.choices[0] && result.choices[0].message && result.choices[0].message.content) {\r\n         return result.choices[0].message.content;\r\n     } else {\r\n         console.warn(\"[Worker Deepseek DEBUG] Could not find expected content in Deepseek JSON response.\");\r\n         throw new Error(\"Deepseek \u56DE\u61C9\u683C\u5F0F\u4E0D\u7B26\u9810\u671F\uFF0C\u7121\u6CD5\u63D0\u53D6\u5206\u6790\u7D50\u679C\u3002\");\r\n     }\r\n}\r\n\r\n\r\n/**\r\n * Handles Bazi analysis requests.\r\n */\r\nasync function handleAnalysisRequest(request, env) {\r\n    console.log(\"[Worker Request] Entering handleAnalysisRequest...\");\r\n    let requestBody;\r\n    try {\r\n        requestBody = await request.json();\r\n        console.log(\"[Worker Request DEBUG] Parsed request body:\", requestBody);\r\n    } catch (e) {\r\n        console.error(\"[Worker Request] Invalid JSON in request body:\", e);\r\n        return new Response(JSON.stringify({ error: \"\u65E0\u6548\u7684 JSON \u8BF7\u6C42\u4F53\" }), { status: 400, headers: { \"Content-Type\": \"application/json\" } });\r\n    }\r\n\r\n    // --- Extract and Validate Input Data --- //\r\n    const { year, month, day, time, location } = requestBody;\r\n\r\n    if (!year || !month || !day) {\r\n        console.error(\"[Worker Request] Missing required fields (year, month, day).\", requestBody);\r\n        return new Response(JSON.stringify({ error: \"\u7F3A\u5C11\u5FC5\u586B\u6B04\u4F4D\uFF1A\u897F\u5143\u5E74\u3001\u6708\u3001\u65E5\u3002\" }), { status: 400, headers: { \"Content-Type\": \"application/json\" } });\r\n    }\r\n\r\n    // Basic validation (can be more sophisticated)\r\n    if (isNaN(parseInt(year)) || parseInt(year) < 1900 || parseInt(year) > new Date().getFullYear() + 1) {\r\n        return new Response(JSON.stringify({ error: \"\u7121\u6548\u7684\u897F\u5143\u5E74\u4EFD\u3002\" }), { status: 400, headers: { \"Content-Type\": \"application/json\" } });\r\n    }\r\n     if (isNaN(parseInt(month)) || parseInt(month) < 1 || parseInt(month) > 12) {\r\n        return new Response(JSON.stringify({ error: \"\u7121\u6548\u7684\u6708\u4EFD\u3002\" }), { status: 400, headers: { \"Content-Type\": \"application/json\" } });\r\n    }\r\n    if (isNaN(parseInt(day)) || parseInt(day) < 1 || parseInt(day) > 31) { // Basic check, could improve based on month/year\r\n        return new Response(JSON.stringify({ error: \"\u7121\u6548\u7684\u65E5\u671F\u3002\" }), { status: 400, headers: { \"Content-Type\": \"application/json\" } });\r\n    }\r\n    // Optional validation for time format (HHMM)\r\n    if (time && !/^(?:[01]\\d|2[0-3])(?:[0-5]\\d)$/.test(time)) {\r\n         return new Response(JSON.stringify({ error: \"\u7121\u6548\u7684\u6642\u9593\u683C\u5F0F\uFF0C\u8ACB\u4F7F\u7528 HHMM (\u4F8B\u5982 1430)\u3002\" }), { status: 400, headers: { \"Content-Type\": \"application/json\" } });\r\n    }\r\n\r\n\r\n    // --- Get Environment Variables --- //\r\n    const { DEEPSEEK_API_KEY } = env;\r\n    console.log(`[Worker ENV DEBUG] DEEPSEEK_API_KEY: ${DEEPSEEK_API_KEY ? 'Loaded' : 'MISSING!'}`);\r\n\r\n    if (!DEEPSEEK_API_KEY) {\r\n        console.error(\"[Worker ENV] DEEPSEEK_API_KEY is missing.\");\r\n        return new Response(JSON.stringify({ error: \"\u5F8C\u7AEF Deepseek API \u91D1\u9470\u672A\u8A2D\u5B9A\" }), { status: 500, headers: { \"Content-Type\": \"application/json\" } });\r\n    }\r\n\r\n    // --- Construct the Prompt for Deepseek --- //\r\n    // Map HHMM time values to Shichen (\u6642\u8FB0) names and ranges for the prompt\r\n    const shichenMap = {\r\n        \"2300\": \"\u5B50\u6642 (23:00 - 00:59)\",\r\n        \"0100\": \"\u4E11\u6642 (01:00 - 02:59)\",\r\n        \"0300\": \"\u5BC5\u6642 (03:00 - 04:59)\",\r\n        \"0500\": \"\u536F\u6642 (05:00 - 06:59)\",\r\n        \"0700\": \"\u8FB0\u6642 (07:00 - 08:59)\",\r\n        \"0900\": \"\u5DF3\u6642 (09:00 - 10:59)\",\r\n        \"1100\": \"\u5348\u6642 (11:00 - 12:59)\",\r\n        \"1300\": \"\u672A\u6642 (13:00 - 14:59)\",\r\n        \"1500\": \"\u7533\u6642 (15:00 - 16:59)\",\r\n        \"1700\": \"\u9149\u6642 (17:00 - 18:59)\",\r\n        \"1900\": \"\u620C\u6642 (19:00 - 20:59)\",\r\n        \"2100\": \"\u4EA5\u6642 (21:00 - 22:59)\"\r\n    };\r\n\r\n    // Construct time string for the prompt\r\n    let timeStringForPrompt = \"(\u6642\u8FB0\u672A\u77E5)\";\r\n    if (time && shichenMap[time]) {\r\n        timeStringForPrompt = shichenMap[time];\r\n    } else if (time) {\r\n        // Fallback if time value is somehow not in the map (shouldn't happen with select)\r\n        timeStringForPrompt = `\u5927\u7D04 ${time.substring(0, 2)} \u6642 ${time.substring(2)} \u5206`;\r\n    }\r\n\r\n    const systemPrompt = `\u4F60\u662F\u4E00\u4F4D\u7CBE\u901A\u7E41\u9AD4\u4E2D\u6587\u7684\u56DB\u67F1\u516B\u5B57\u547D\u7406\u5E2B\u3002\u4F60\u7684\u4EFB\u52D9\u662F\u6839\u64DA\u4F7F\u7528\u8005\u63D0\u4F9B\u7684\u897F\u5143\u51FA\u751F\u5E74\u6708\u65E5\u6642\u8FB0\u548C\u5730\u9EDE\uFF08\u5982\u679C\u63D0\u4F9B\uFF09\uFF0C\u9032\u884C\u8A73\u7D30\u7684\u516B\u5B57\u4E94\u884C\u5206\u6790\uFF0C\u4E26\u63A8\u85A6\u9069\u5408\u7684\u624B\u4E32\u3002\u8ACB\u9075\u5FAA\u4EE5\u4E0B\u6B65\u9A5F\uFF1A\r\n1.  \u6839\u64DA\u897F\u5143 ${year} \u5E74 ${month} \u6708 ${day} \u65E5 ${timeStringForPrompt}${location ? `\uFF0C\u51FA\u751F\u5730\u9EDE ${location}` : ''}\uFF0C\u63A8\u7B97\u51FA\u7CBE\u78BA\u7684\u8FB2\u66C6\u65E5\u671F\u548C\u5C0D\u61C9\u7684\u6642\u8FB0\u5929\u5E72\u5730\u652F\u3002\r\n2.  \u6392\u51FA\u5B8C\u6574\u7684\u56DB\u67F1\u5E72\u652F\uFF08\u5E74\u67F1\u3001\u6708\u67F1\u3001\u65E5\u67F1\u3001\u6642\u67F1\uFF09\u3002\u5982\u679C\u6642\u8FB0\u672A\u77E5\uFF0C\u8ACB\u57FA\u65BC\u5E74\u6708\u65E5\u4E09\u67F1\u9032\u884C\u5206\u6790\uFF0C\u4E26\u8AAA\u660E\u7F3A\u5C11\u6642\u67F1\u53EF\u80FD\u5C0D\u7CBE\u78BA\u5EA6\u7522\u751F\u5F71\u97FF\u3002\r\n3.  \u5206\u6790\u547D\u76E4\u4E2D\u5929\u5E72\u5730\u652F\u5C0D\u61C9\u7684\u4E94\u884C\uFF08\u91D1\u3001\u6728\u3001\u6C34\u3001\u706B\u3001\u571F\uFF09\u53CA\u5176\u6578\u91CF\u548C\u65FA\u8870\u60C5\u6CC1\u3002\r\n4.  \u7D9C\u5408\u5224\u65B7\u6B64\u547D\u76E4\u4E2D\u6700\u9700\u8981\u88DC\u5145\u7684\u4E94\u884C\u662F\u54EA\u4E00\u500B\uFF08\u901A\u5E38\u662F\u6578\u91CF\u6700\u5C11\u6216\u76F8\u5C0D\u6700\u5F31\u7684\u90A3\u500B\uFF09\u3002\u660E\u78BA\u6307\u51FA\u9700\u8981\u88DC\u5145\u7684\u4E94\u884C\u540D\u7A31\u3002\r\n5.  \u91DD\u5C0D\u9700\u8981\u88DC\u5145\u7684\u4E94\u884C\uFF0C\u63A8\u85A6 3 \u5230 5 \u7A2E\u4E3B\u8981\u7684\u6C34\u6676\u6216\u624B\u4E32\u73E0\u6750\u8CEA\uFF0C\u4E26\u7C21\u8981\u8AAA\u660E\u8A72\u6750\u8CEA\u5C6C\u65BC\u54EA\u7A2E\u4E94\u884C\u4EE5\u53CA\u70BA\u4F55\u9069\u5408\uFF08\u4F8B\u5982\uFF1A\u9EC3\u6C34\u6676\u5C6C\u571F\uFF0C\u9069\u5408\u88DC\u571F\uFF1B\u7DA0\u5E7D\u9748\u5C6C\u6728\uFF0C\u9069\u5408\u88DC\u6728\uFF09\u3002\r\n6.  \u6574\u500B\u56DE\u7B54\u8ACB\u4F7F\u7528\u6EAB\u548C\u3001\u5C08\u696D\u3001\u6613\u65BC\u7406\u89E3\u7684\u8A9E\u6C23\uFF0C\u4E26\u4EE5\u7E41\u9AD4\u4E2D\u6587\u5448\u73FE\u3002\r\n7.  \u5C07\u6700\u7D42\u7684\u5206\u6790\u7D50\u679C\u548C\u5EFA\u8B70\u6574\u5408\u70BA\u4E00\u500B\u5B8C\u6574\u7684\u56DE\u7B54\u3002`;\r\n\r\n    // Prepare messages for Deepseek\r\n    const messagesForDeepseek = [\r\n        { role: \"system\", content: systemPrompt },\r\n        // User message is implicit in the system prompt now\r\n    ];\r\n\r\n    console.log(`[Worker Logic] Constructed System Prompt for Deepseek (length: ${systemPrompt.length})`);\r\n\r\n    // --- Call Deepseek API --- //\r\n    try {\r\n        console.log(\"[Worker Logic] Calling Deepseek for Bazi analysis...\");\r\n        const deepseekAnswer = await callDeepseek(DEEPSEEK_API_KEY, messagesForDeepseek);\r\n\r\n        // Format and return Deepseek response\r\n        console.log(`[Worker Logic DEBUG] Received Deepseek analysis (length: ${deepseekAnswer.length})`);\r\n        const formattedResponse = formatResponse(deepseekAnswer);\r\n        console.log(\"[Worker Logic DEBUG] Sending formatted Deepseek response to client.\");\r\n        return new Response(JSON.stringify(formattedResponse), { status: 200, headers: { 'Content-Type': 'application/json' } });\r\n\r\n    } catch (e) {\r\n        console.error(\"[Worker Logic] FATAL Error during Deepseek API call or processing:\", e);\r\n        if (e.stack) console.error(\"[Worker Logic DEBUG] Error Stack:\", e.stack);\r\n        const errorMsg = \"\u8655\u7406\u8ACB\u6C42\u6642\u767C\u751F\u5167\u90E8\u932F\u8AA4 (Worker)\";\r\n        const errorDetail = e.message || \"Unknown error\"; // Use the error message from callDeepseek\r\n        // Return error in the same format as successful response for consistency\r\n        const errorResponse = formatResponse(`\u5206\u6790\u5931\u6557\uFF1A${errorDetail}`, \"assistant\", \"error\");\r\n        return new Response(JSON.stringify(errorResponse), { status: 500, headers: { 'Content-Type': 'application/json' } });\r\n    }\r\n}\r\n\r\n// _worker.js entry point\r\nexport default {\r\n  async fetch(request, env, ctx) {\r\n    const url = new URL(request.url);\r\n    const pathname = url.pathname;\r\n    const method = request.method;\r\n\r\n    console.log(`[Worker Entry] Request: ${method} ${pathname}`);\r\n\r\n    // API route for analysis\r\n    if (pathname === \"/api/analyze\" && method === \"POST\") {\r\n        return handleAnalysisRequest(request, env);\r\n    }\r\n\r\n    // Static assets route (serving index.html etc.)\r\n    if (method === \"GET\") {\r\n        try {\r\n            // Use the default asset handling provided by Pages\r\n            // No need to explicitly check env.ASSETS if using standard Pages build output\r\n            // Assuming index.html and other assets are in the build output directory\r\n            return env.ASSETS.fetch(request);\r\n        } catch (e) {\r\n            // Basic error handling for asset fetching\r\n             if (e.message.includes(\"Could not find asset\")) {\r\n                  console.error(`[Worker Static] Asset not found for path: ${pathname}`, e);\r\n                  // Specifically check for root path and serve index.html if not found by default routing\r\n                  if (pathname === '/' ) {\r\n                      console.warn(\"[Worker Static] Root path '/' not found, attempting to serve '/index.html'\");\r\n                      try {\r\n                          let newRequest = new Request(new URL('/index.html', request.url), request);\r\n                          return await env.ASSETS.fetch(newRequest);\r\n                      } catch (nestedError) {\r\n                           console.error(\"[Worker Static] Failed to serve '/index.html' as fallback for root.\", nestedError);\r\n                           return new Response(\"\u627E\u4E0D\u5230\u4E3B\u8981\u9801\u9762 (index.html)\", { status: 404 });\r\n                      }\r\n                  }\r\n                  return new Response(\"\u8CC7\u6E90\u672A\u627E\u5230 (Not Found)\", { status: 404 });\r\n             } else {\r\n                 console.error(`[Worker Static] Error fetching asset: ${pathname}`, e);\r\n                 return new Response(\"\u7121\u6CD5\u8B80\u53D6\u975C\u614B\u8CC7\u6E90\", { status: 500 });\r\n             }\r\n        }\r\n    }\r\n\r\n    // Other methods\r\n    console.warn(`[Worker Entry] Method ${method} not allowed for path '${pathname}'.`);\r\n    return new Response(\"\u65B9\u6CD5\u4E0D\u5141\u8A31 (Method Not Allowed)\", { status: 405 });\r\n  },\r\n};", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"E:\\\\projects\\\\\u97FB\u6148\\\\_worker.js\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"C:\\\\Users\\\\PONY\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"C:\\\\Users\\\\PONY\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"E:\\\\projects\\\\\u97FB\u6148\\\\_worker.js\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"E:\\\\projects\\\\\u97FB\u6148\\\\.wrangler\\\\tmp\\\\bundle-IyuSD6\\\\middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"C:\\\\Users\\\\PONY\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\common.ts\";\nimport type { WorkerEntrypointConstructor } from \"E:\\\\projects\\\\\u97FB\u6148\\\\.wrangler\\\\tmp\\\\bundle-IyuSD6\\\\middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"E:\\\\projects\\\\\u97FB\u6148\\\\.wrangler\\\\tmp\\\\bundle-IyuSD6\\\\middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"E:\\\\projects\\\\\u97FB\u6148\\\\.wrangler\\\\tmp\\\\pages-Bw2X71\\\\bundledWorker-0.7335690343576204.mjs\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"C:\\\\Users\\\\PONY\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"C:\\\\Users\\\\PONY\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"E:\\\\projects\\\\\u97FB\u6148\\\\.wrangler\\\\tmp\\\\pages-Bw2X71\\\\bundledWorker-0.7335690343576204.mjs\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"E:\\\\projects\\\\\u97FB\u6148\\\\.wrangler\\\\tmp\\\\bundle-fNr1VJ\\\\middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"C:\\\\Users\\\\PONY\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\wrangler\\\\templates\\\\middleware\\\\common.ts\";\nimport type { WorkerEntrypointConstructor } from \"E:\\\\projects\\\\\u97FB\u6148\\\\.wrangler\\\\tmp\\\\bundle-fNr1VJ\\\\middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"E:\\\\projects\\\\\u97FB\u6148\\\\.wrangler\\\\tmp\\\\bundle-fNr1VJ\\\\middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": "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",
  "names": ["__name", "drainBody", "middleware_ensure_req_body_drained_default", "reduceError", "jsonError", "middleware_miniflare3_json_error_default", "__INTERNAL_WRANGLER_MIDDLEWARE__", "middleware_ensure_req_body_drained_default", "middleware_miniflare3_json_error_default", "middleware_insertion_facade_default", "__facade_middleware__", "__facade_register__", "__facade_invokeChain__", "__facade_invoke__", "__facade_middleware__", "__Facade_ScheduledController__", "___Facade_ScheduledController__", "wrapExportedHandler", "__INTERNAL_WRANGLER_MIDDLEWARE__", "__facade_register__", "__facade_invoke__", "wrapWorkerEntrypoint", "WRAPPED_ENTRY", "middleware_insertion_facade_default", "middleware_loader_entry_default"]
}
